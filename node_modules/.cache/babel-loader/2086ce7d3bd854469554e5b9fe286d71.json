{"ast":null,"code":"var _jsxFileName = \"/home/gvr000365/Projects/Classes/github-explorer/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/img/logo.svg\";\nimport { Title, Form, Repositories, Error } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState(() => {\n    const storagedRepositories = localStorage.getItem('@GithubExplore:repositories');\n\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n\n    return [];\n  });\n  useEffect(() => {\n    localStorage.setItem('@GithubExplore:repositories', JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function handleAddReposiory(e) {\n    e.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Insira o autor/nome do repositório.');\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca por esse repositório');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImg,\n      alt: \"Github Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"Explore reposit\\xF3rios no Github.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      hasError: !!inputError,\n      onSubmit: handleAddReposiory,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setNewRepo(e.target.value),\n        value: newRepo,\n        placeholder: \"facebook/react\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Pesquisar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), inputError && /*#__PURE__*/_jsxDEV(Error, {\n      children: inputError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n      children: repositories.map(repository => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/repository/${repository.full_name}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: repository.owner.avatar_url,\n          alt: repository.owner.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: repository.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, repository.full_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"aLsxZBNni/DHgKE1hgYT7Kd7R28=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/gvr000365/Projects/Classes/github-explorer/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","Link","FiChevronRight","api","Title","Form","Repositories","Error","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","storagedRepositories","localStorage","getItem","JSON","parse","setItem","stringify","handleAddReposiory","e","preventDefault","response","get","repository","data","err","logoImg","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/img/logo.svg';\n\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n    full_name: string;\n    description: string;\n    owner: {\n        login: string;\n        avatar_url: string;\n    };\n}\n\nconst Dashboard: React.FC = () => {\n    const [newRepo, setNewRepo] = useState('');\n    const [inputError, setInputError] = useState('');\n    const [repositories, setRepositories] = useState<Repository[]>(() => {\n        const storagedRepositories = localStorage.getItem(\n            '@GithubExplore:repositories',\n        );\n\n        if (storagedRepositories) {\n            return JSON.parse(storagedRepositories);\n        }\n        return [];\n    });\n\n    useEffect(() => {\n        localStorage.setItem(\n            '@GithubExplore:repositories',\n            JSON.stringify(repositories),\n        );\n    }, [repositories]);\n\n    async function handleAddReposiory(\n        e: FormEvent<HTMLFormElement>,\n    ): Promise<void> {\n        e.preventDefault();\n\n        if (!newRepo) {\n            setInputError('Insira o autor/nome do repositório.');\n            return;\n        }\n\n        try {\n            const response = await api.get(`repos/${newRepo}`);\n\n            const repository = response.data;\n\n            setRepositories([...repositories, repository]);\n            setNewRepo('');\n            setInputError('');\n        } catch (err) {\n            setInputError('Erro na busca por esse repositório');\n        }\n    }\n\n    return (\n        <>\n            <img src={logoImg} alt=\"Github Explorer\" />\n            <Title>Explore repositórios no Github.</Title>\n\n            <Form hasError={!!inputError} onSubmit={handleAddReposiory}>\n                <input\n                    onChange={e => setNewRepo(e.target.value)}\n                    value={newRepo}\n                    placeholder=\"facebook/react\"\n                />\n                <button type=\"submit\">Pesquisar</button>\n            </Form>\n\n            {inputError && <Error>{inputError}</Error>}\n\n            <Repositories>\n                {repositories.map(repository => (\n                    <Link\n                        key={repository.full_name}\n                        to={`/repository/${repository.full_name}`}\n                    >\n                        <img\n                            src={repository.owner.avatar_url}\n                            alt={repository.owner.login}\n                        />\n                        <div>\n                            <strong>{repository.full_name}</strong>\n                            <p>{repository.description}</p>\n                        </div>\n                        <FiChevronRight size={20} />\n                    </Link>\n                ))}\n            </Repositories>\n        </>\n    );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}