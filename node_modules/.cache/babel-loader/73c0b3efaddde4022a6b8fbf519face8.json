{"ast":null,"code":"var _jsxFileName = \"/home/gvr000365/Projects/Classes/github-explorer/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/img/logo.svg\";\nimport { Title, Form, Repositories } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [newRepo, setNewRepo] = useState('');\n  const [repositories, setRepositories] = useState([]);\n\n  async function handleAddReposiory(event) {\n    event.preventDefault();\n    const response = await api.get(`repos/${newRepo}`);\n    const repository = response.data;\n    setRepositories([...repositories, repository]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImg,\n      alt: \"Github Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"Explore reposit\\xF3rios no Github.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleAddReposiory,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setNewRepo(e.target.value),\n        value: newRepo,\n        placeholder: \"Digite o nome do reposit\\xF3rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Pesquisar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n      children: repositories.map(repository => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"teste\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: repository.owner.avatar_ulr,\n          alt: repository.owner.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: repository.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, repository.full_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"9YWBVAaaWt2rSNmbXjgX8puY7YM=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/gvr000365/Projects/Classes/github-explorer/src/pages/Dashboard/index.tsx"],"names":["React","useState","FiChevronRight","api","Title","Form","Repositories","Dashboard","newRepo","setNewRepo","repositories","setRepositories","handleAddReposiory","event","preventDefault","response","get","repository","data","logoImg","e","target","value","map","owner","avatar_ulr","login","full_name","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;;AAIA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,YAAtB,QAA0C,UAA1C;;;;AAWA,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAe,EAAf,CAAhD;;AAEA,iBAAeW,kBAAf,CACIC,KADJ,EAEiB;AACbA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,QAAQ,GAAG,MAAMZ,GAAG,CAACa,GAAJ,CAAS,SAAQR,OAAQ,EAAzB,CAAvB;AAEA,UAAMS,UAAU,GAAGF,QAAQ,CAACG,IAA5B;AAEAP,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBO,UAAlB,CAAD,CAAf;AACH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEE,OAAV;AAAmB,MAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEP,kBAAhB;AAAA,8BACI;AACI,QAAA,QAAQ,EAAEQ,CAAC,IAAIX,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAD7B;AAEI,QAAA,KAAK,EAAEd,OAFX;AAGI,QAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAaI,QAAC,YAAD;AAAA,gBACKE,YAAY,CAACa,GAAb,CAAiBN,UAAU,iBACxB;AAA8B,QAAA,IAAI,EAAC,OAAnC;AAAA,gCACI;AACI,UAAA,GAAG,EAAEA,UAAU,CAACO,KAAX,CAAiBC,UAD1B;AAEI,UAAA,GAAG,EAAER,UAAU,CAACO,KAAX,CAAiBE;AAF1B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,kCACI;AAAA,sBAAST,UAAU,CAACU;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAIV,UAAU,CAACW;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA,SAAQX,UAAU,CAACU,SAAnB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADJ;AA+BH,CA/CD;;GAAMpB,S;;KAAAA,S;AAiDN,eAAeA,SAAf","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/img/logo.svg';\n\nimport { Title, Form, Repositories } from './styles';\n\ninterface Repository {\n    full_name: string;\n    description: string;\n    owner: {\n        login: string;\n        avatar_ulr: string;\n    };\n}\n\nconst Dashboard: React.FC = () => {\n    const [newRepo, setNewRepo] = useState('');\n    const [repositories, setRepositories] = useState<Repository[]>([]);\n\n    async function handleAddReposiory(\n        event: FormEvent<HTMLFormElement>,\n    ): Promise<void> {\n        event.preventDefault();\n\n        const response = await api.get(`repos/${newRepo}`);\n\n        const repository = response.data;\n\n        setRepositories([...repositories, repository]);\n    }\n\n    return (\n        <>\n            <img src={logoImg} alt=\"Github Explorer\" />\n            <Title>Explore repositórios no Github.</Title>\n\n            <Form onSubmit={handleAddReposiory}>\n                <input\n                    onChange={e => setNewRepo(e.target.value)}\n                    value={newRepo}\n                    placeholder=\"Digite o nome do repositório\"\n                />\n                <button type=\"submit\">Pesquisar</button>\n            </Form>\n\n            <Repositories>\n                {repositories.map(repository => (\n                    <a key={repository.full_name} href=\"teste\">\n                        <img\n                            src={repository.owner.avatar_ulr}\n                            alt={repository.owner.login}\n                        />\n                        <div>\n                            <strong>{repository.full_name}</strong>\n                            <p>{repository.description}</p>\n                        </div>\n                        <FiChevronRight size={20} />\n                    </a>\n                ))}\n            </Repositories>\n        </>\n    );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}