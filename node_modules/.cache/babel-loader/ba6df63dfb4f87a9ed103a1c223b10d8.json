{"ast":null,"code":"var _jsxFileName = \"/home/gvr000365/Projects/Classes/github-explorer/src/pages/Repository/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/img/logo.svg\";\nimport { Header, RepositoryInfo, Issues } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Repository = () => {\n  _s();\n\n  const {\n    params\n  } = useRouteMatch();\n  const [repository, setRepository] = useState(null);\n  const [issues, setIssues] = useState([]);\n  useEffect(() => {\n    // api.get(`/repos/${params.repository}`).then(response => {\n    //     console.log(response);\n    // });\n    // api.get(`/repos/${params.repository}/issues`).then(response => {\n    //     console.log(response);\n    // });\n    async function loadData() {\n      const [repositoryData, issuesData] = await Promise.all([api.get(`/repos/${params.repository}`), api.get(`/repos/${params.repository}/issues`)]);\n      setRepository(repositoryData);\n    }\n\n    loadData();\n  }, [params.repository]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImg,\n        alt: \"GithubExplorer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(FiChevronLeft, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), \"Voltar\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), repository && /*#__PURE__*/_jsxDEV(RepositoryInfo, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: repository.owner.avatar_url,\n          alt: repository.owner.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: repository.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.stargazers_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Stars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.forks_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Forks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.open_issues_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Issues abertas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Issues, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"teste\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"asdfasdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"adfa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Repository, \"Pos/lUj1xhJTs66n7yLBSfWqL64=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = Repository;\nexport default Repository;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repository\");","map":{"version":3,"sources":["/home/gvr000365/Projects/Classes/github-explorer/src/pages/Repository/index.tsx"],"names":["React","useEffect","useState","FiChevronLeft","FiChevronRight","Link","useRouteMatch","api","Header","RepositoryInfo","Issues","Repository","params","repository","setRepository","issues","setIssues","loadData","repositoryData","issuesData","Promise","all","get","logoImg","owner","avatar_url","login","full_name","description","stargazers_count","forks_count","open_issues_count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,gBAA9C;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,kBAApC;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;;AAIA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,MAAjC,QAA+C,UAA/C;;;;AA0BA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAaN,aAAa,EAAhC;AAEA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAoB,IAApB,CAA5C;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAU,EAAV,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AAEA,mBAAegB,QAAf,GAA0B;AACtB,YAAM,CAACC,cAAD,EAAiBC,UAAjB,IAA+B,MAAMC,OAAO,CAACC,GAAR,CAAY,CACnDd,GAAG,CAACe,GAAJ,CAAS,UAASV,MAAM,CAACC,UAAW,EAApC,CADmD,EAEnDN,GAAG,CAACe,GAAJ,CAAS,UAASV,MAAM,CAACC,UAAW,SAApC,CAFmD,CAAZ,CAA3C;AAIAC,MAAAA,aAAa,CAACI,cAAD,CAAb;AACH;;AAEDD,IAAAA,QAAQ;AACX,GAjBQ,EAiBN,CAACL,MAAM,CAACC,UAAR,CAjBM,CAAT;AAmBA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEU,OAAV;AAAmB,QAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,gCACI,QAAC,aAAD;AAAe,UAAA,IAAI,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EASKV,UAAU,iBACP,QAAC,cAAD;AAAA,8BACI;AAAA,gCACI;AACI,UAAA,GAAG,EAAEA,UAAU,CAACW,KAAX,CAAiBC,UAD1B;AAEI,UAAA,GAAG,EAAEZ,UAAU,CAACW,KAAX,CAAiBE;AAF1B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,kCACI;AAAA,sBAASb,UAAU,CAACc;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAId,UAAU,CAACe;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA,gCACI;AAAA,kCACI;AAAA,sBAASf,UAAU,CAACgB;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,kCACI;AAAA,sBAAShB,UAAU,CAACiB;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI;AAAA,kCACI;AAAA,sBAASjB,UAAU,CAACkB;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVR,eAsCI,QAAC,MAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,OAAT;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAtCJ;AAAA,kBADJ;AAkDH,CA3ED;;GAAMpB,U;UACiBL,a;;;KADjBK,U;AA6EN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/img/logo.svg';\n\nimport { Header, RepositoryInfo, Issues } from './styles';\n\ninterface RepositoryParams {\n    repository: string;\n}\n\ninterface Repository {\n    full_name: string;\n    description: string;\n    stargazers_count: number;\n    forks_count: number;\n    open_issues_count: number;\n    owner: {\n        login: string;\n        avatar_url: string;\n    };\n}\n\ninterface Issue {\n    id: number;\n    title: string;\n    user: {\n        login: string;\n    };\n}\n\nconst Repository: React.FC = () => {\n    const { params } = useRouteMatch<RepositoryParams>();\n\n    const [repository, setRepository] = useState<Repository | null>(null);\n    const [issues, setIssues] = useState<Issue[]>([]);\n\n    useEffect(() => {\n        // api.get(`/repos/${params.repository}`).then(response => {\n        //     console.log(response);\n        // });\n        // api.get(`/repos/${params.repository}/issues`).then(response => {\n        //     console.log(response);\n        // });\n\n        async function loadData() {\n            const [repositoryData, issuesData] = await Promise.all([\n                api.get(`/repos/${params.repository}`),\n                api.get(`/repos/${params.repository}/issues`),\n            ]);\n            setRepository(repositoryData);\n        }\n\n        loadData();\n    }, [params.repository]);\n\n    return (\n        <>\n            <Header>\n                <img src={logoImg} alt=\"GithubExplorer\" />\n                <Link to=\"/\">\n                    <FiChevronLeft size={20} />\n                    Voltar\n                </Link>\n            </Header>\n\n            {repository && (\n                <RepositoryInfo>\n                    <header>\n                        <img\n                            src={repository.owner.avatar_url}\n                            alt={repository.owner.login}\n                        />\n                        <div>\n                            <strong>{repository.full_name}</strong>\n                            <p>{repository.description}</p>\n                        </div>\n                    </header>\n                    <ul>\n                        <li>\n                            <strong>{repository.stargazers_count}</strong>\n                            <span>Stars</span>\n                        </li>\n                        <li>\n                            <strong>{repository.forks_count}</strong>\n                            <span>Forks</span>\n                        </li>\n                        <li>\n                            <strong>{repository.open_issues_count}</strong>\n                            <span>Issues abertas</span>\n                        </li>\n                    </ul>\n                </RepositoryInfo>\n            )}\n\n            <Issues>\n                <Link to=\"teste\">\n                    <div>\n                        <strong>asdfasdf</strong>\n                        <p>adfa</p>\n                    </div>\n                    <FiChevronRight size={20} />\n                </Link>\n            </Issues>\n        </>\n    );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}